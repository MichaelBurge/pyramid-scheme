#lang pyramid

(require psl "primitives.pmd")

(define + %-+)
(define - %--)
(define * %-*)
(define / %-/)
(define % %-mod)
(define = %-=)
(define > %->)
(define < %-<)
(define ptr-= %-ptr-=)
(define (pred i) (- i 1))

(defmacro (and . xs)
  (cond ((null? xs) 'true)
        ((null? (cdr xs)) (car xs))
        (else `(if ,(car xs)
                   (and ,(cdr xs))
                   false))))

(defmacro (or . xs)
  (cond ((null? xs) 'false)
        ((null? (cdr xs)) (car xs))
        (else `(if ,(car xs)
                   true
                   (or ,(cdr xs))))))

(define (equal? a b)
  (or (ptr-= a b)
      (and (eq? (%-tag a) (%-tag b))
           (cond ((fixnum? x) (equal-fixnum? x))
                 ((symbol? x) (equal-fixnum? x))
                 (else (%-throw))))))
